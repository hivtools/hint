buildscript {
    ext.kotlin_version = '1.6.10'
}

apply plugin: 'application'

mainClassName = "org.imperial.mrc.hint.AppStartKt"

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory.set(layout.buildDirectory.dir("$projectDir/coverage"))
}

tasks.jacocoTestReport {
    reports {
        xml.required.set(true)
        csv.required.set(false)
    }
}

group = 'org.imperial.mrc'
sourceCompatibility = JavaVersion.VERSION_11
def tomcatVersion = '9.0.65'

dependencies {

    implementation 'com.github.kittinunf.fuel:fuel:2.3.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}"
    implementation "org.apache.tomcat.embed:tomcat-embed-el:${tomcatVersion}"
    implementation "org.apache.tomcat.embed:tomcat-embed-websocket:${tomcatVersion}"
    implementation "org.apache.tomcat:tomcat-annotations-api:${tomcatVersion}"
    implementation 'net.logstash.logback:logstash-logback-encoder:7.0.1'
    testImplementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.0'
    implementation 'org.apache.commons:commons-text:1.9'

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'
    implementation "org.jooq:jooq:3.14.16"
    implementation 'org.pac4j:spring-webmvc-pac4j:6.0.2'
    implementation 'org.pac4j:pac4j-http:5.4.5'
    implementation 'org.pac4j:pac4j-jwt:5.4.5'
    implementation 'org.pac4j:pac4j-sql:5.4.5'
    implementation 'org.pac4j:pac4j-oauth:5.4.5'
    implementation 'org.postgresql:postgresql:42.3.3'
    implementation 'org.mindrot:jbcrypt:0.4'
    implementation 'com.github.spullara.mustache.java:compiler:0.9.5'
    implementation "org.simplejavamail:simple-java-mail:6.5.0"
    implementation 'jakarta.mail:jakarta.mail-api:1.6.7'
    implementation 'com.sun.activation:jakarta.activation:2.0.1'
    implementation 'org.duckdb:duckdb_jdbc:0.10.0'
    implementation 'org.ktorm:ktorm-core:3.6.0'

    implementation project(":databaseInterface")

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "com.vaadin.external.google", module:"android-json"
        exclude module: 'junit'
    }
    testImplementation "org.leadpony.justify:justify:1.1.0"
    testImplementation "org.leadpony.joy:joy:1.1.0"
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation "com.nhaarman:mockito-kotlin:1.3.0"
    testImplementation "org.jsoup:jsoup:1.11.3"
    testImplementation "org.xmlmatchers:xml-matchers:0.10"
    testImplementation "net.sourceforge.htmlunit:htmlunit:2.4"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.4.2"
    testImplementation "org.apache.httpcomponents:httpclient:4.5.12"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = JavaVersion.VERSION_11
    }
}

task compileFrontEnd() {
    onlyIf {
        hotReload != "true"
    }
    doLast {
        exec {
            commandLine "npm", "run", "build", "--prefix=$projectDir/static/"
        }
    }
}

task copyAssets() {
    doLast {
        exec {
            commandLine "npm", "run", "copy", "--prefix=$projectDir/static/"
        }
    }
}

//Run bootRun with eg -PspringProfile=prod to run with a different active profile from default 'dev'
//defined in gradle.properties
bootRun {
    bootRun.systemProperty 'spring.profiles.active', springProfile
}

processResources.dependsOn 'compileFrontEnd', 'copyAssets'
